{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/darchie/Documents/code/codenetix2/src/components/section-components/Count.jsx\";\nimport React from 'react';\nimport { sectionData } from './../../data/section.json';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst Count = () => {\n  let data = sectionData.count;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"count pt-90 bg-blue\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: data.singleCount.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-3 col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `count-item text-center wow ${item.animation}`,\n                \"data-wow-duration\": \"1.5s\",\n                \"data-wow-delay\": item.animationDelay,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"circle\",\n                  children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                    value: item.percent,\n                    text: `${item.percent}%`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 21,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 41\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["/Users/darchie/Documents/code/codenetix2/src/components/section-components/Count.jsx"],"names":["React","sectionData","CircularProgressbar","Count","data","count","singleCount","map","item","i","animation","animationDelay","percent","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,OAAO,4CAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,MAAIC,IAAI,GAAGH,WAAW,CAACI,KAAvB;AACA,sBACI;AAAA,2BAEI;AAAS,MAAA,SAAS,EAAC,qBAAnB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,oBAEQD,IAAI,CAACE,WAAL,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,KAAW;AAC5B,gCACI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAG,8BAA6BD,IAAI,CAACE,SAAU,EAA7D;AAAgE,qCAAkB,MAAlF;AAAyF,kCAAgBF,IAAI,CAACG,cAA9G;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,QAAf;AAAA,0CAEQ,QAAC,mBAAD;AAAqB,oBAAA,KAAK,EAAEH,IAAI,CAACI,OAAjC;AAA0C,oBAAA,IAAI,EAAG,GAAEJ,IAAI,CAACI,OAAQ;AAAhE;AAAA;AAAA;AAAA;AAAA,0BAFR,eAII;AAAA,8BAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,eAAwCJ,CAAxC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAYH,WAbD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA9BD;;KAAMN,K;AAgCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport {sectionData} from './../../data/section.json'\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst Count = () => {\r\n    let data = sectionData.count;\r\n    return (\r\n        <div>\r\n            {/* <!-- start count area --> */}\r\n            <section className=\"count pt-90 bg-blue\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            data.singleCount.map((item, i)=>{\r\n                                return (\r\n                                    <div className=\"col-lg-3 col-md-6\" key={i}>\r\n                                        <div className={`count-item text-center wow ${item.animation}`} data-wow-duration=\"1.5s\" data-wow-delay={item.animationDelay}>\r\n                                            <div className=\"circle\">\r\n                                                \r\n                                                    <CircularProgressbar value={item.percent} text={`${item.percent}%`} />\r\n                                               \r\n                                                <h5>{item.title}</h5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/* <!-- end count area --> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Count;\r\n"]},"metadata":{},"sourceType":"module"}